/* 
Runtime: 441 ms, faster than 45.18% of C++ online submissions.
Memory: 11.51 MB, less than 98.19% of C++ online submissions.
*/

class Solution {
public:
    int countPrimes(int n) {
         if (n <= 2) return 0; // No prime numbers less than 2
        
        vector<bool> isPrime(n, true); // Create a boolean array of size n
        isPrime[0] = isPrime[1] = false; // 0 and 1 are not primes

        // Start the sieve process
        for (int i = 2; i * i < n; i++) {
            if (isPrime[i]) {
                for (int j = i * i; j < n; j += i) {
                    isPrime[j] = false; // Mark multiples of i as non-prime
                }
            }
        }

        // Count primes
        int primeCount = 0;
        for (int i = 2; i < n; i++) {
            if (isPrime[i]) { 
                primeCount++;
            }
        }
        
        return primeCount;
    }
};
 
 
